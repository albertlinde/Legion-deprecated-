function ALMap(){this.map=[]}function ConnectionManager(e){this.legion=e,this.serverConnection=null,this.peerConnections=new ALMap;var t=this;this.legion.messagingAPI.setHandlerFor("OfferAsAnswer",function(e,o){t.handleSignalling(e,o)}),this.legion.messagingAPI.setHandlerFor("OfferReturn",function(e,o){t.handleSignalling(e,o)}),this.legion.messagingAPI.setHandlerFor("ICE",function(e,o){t.handleSignalling(e,o)})}function ALQueue(){this.queue=[]}function Legion(e){this.options=e,this.messageCount=Math.floor(Math.random()*Number.MAX_VALUE%Math.pow(10,10)),this.id=this.options.clientID,this.messagingAPI=new MessagingAPI(this),this.overlay=new Overlay(this,this),this.connectionManager=new ConnectionManager(this),this.options.bullyProtocol&&(this.bullyProtocol=new this.options.bullyProtocol.type(this)),this.objectStore=null}function compress(e,t){"undefined"!=typeof LZMA?LZMA.compress(e,1,function(e){for(var o="",n=0;n<e.length;n++)o+=fromDecToHex(e[n]);t(o)},function(){}):t(e)}function decompress(e,t){for(var o=[],n=0;n<e.length;n+=2)o.push(fromHexToDec(e[n]+e[n+1]));"undefined"!=typeof LZMA?LZMA.decompress(o,function(e){t(e)},function(){}):t(e)}function MessagingAPI(e){this.legion=e,this.messagingProtocol=new this.legion.options.messagingProtocol(this,this.legion),this.callbacks=new ALMap,this.duplicates=new Duplicates}function Duplicates(){this.senders=[]}function RangeSet(){this.pairs=[]}function ObjectServerConnection(e,t,o){this.server=e,this.objectStore=t,this.legion=o,this.remoteID=this.server.ip+":"+this.server.port,this.socket=new WebSocket("ws://"+this.server.ip+":"+this.server.port);var n=this;this.socket.onopen=function(){n.legion.generateMessage("CLIENT_ID",null,function(e){e.clientID=n.legion.id,n.send(JSON.stringify(e))}),n.legion.connectionManager.onOpenServer(n)},this.socket.onmessage=function(e){var t=JSON.parse(e.data);console.log("Got "+t.type+" from "+n.remoteID+" s: "+t.sender);var o=JSON.parse(e.data);t.content?decompress(t.content,function(e){t.content=JSON.parse(e),n.objectStore.onMessageFromServer(t,o,n)}):n.objectStore.onMessageFromServer(t,o,n)},this.socket.onclose=function(){n.legion.connectionManager.onCloseServer(n)},this.socket.onerror=function(e){console.error("ServerSocket Error",e)}}function CRDT(e,t,o){this.objectStore=o,this.objectID=e,this.crdt=t,this.state={},this.getValue=t.crdt.getValue,this.merge=t.crdt.merge,this.compare=t.crdt.compare,this.fromJSONString=t.crdt.fromJSONString,this.toJSONString=t.crdt.toJSONString;for(var n=Object.keys(this.crdt.crdt.base_value.state),r=0;r<n.length;r++)"function"==typeof this.crdt.crdt.base_value.state[n[r]]?this.state[n[r]]=new this.crdt.crdt.base_value.state[n[r]]:this.state[n[r]]=JSON.parse(JSON.stringify(this.crdt.crdt.base_value.state[n[r]]));this.locals=[],this.remotes=[],this.localOP=0,this.opHistory=new ALMap,this.versionVector=new ALMap;var s=Object.keys(this.crdt.crdt.operations),i=this;if(this.crdt.propagation==CRDT.OP_BASED)for(var r=0;r<s.length;r++)!function(e){i.locals[e]=i.crdt.crdt.operations[e].local,i.remotes[e]=i.crdt.crdt.operations[e].remote,i[e]=function(){var t=i.locals[e].apply(i,arguments),o=i.getVersionVector();if("undefined"!=typeof CRDT_Database){var n=i.remotes[e].apply(i,[t]);i.addOpToHistory("ObjectServer",++i.localOP,t,e,o),i.addOpToCurrentVersionVector("ObjectServer",i.localOP),i.objectStore.propagate(i.objectID,"ObjectServer",i.localOP,{all:!0}),i.callback&&i.callback(n,{local:!0})}else{i.addOpToHistory(i.objectStore.legion.id,++i.localOP,t,e,o),i.addOpToCurrentVersionVector(i.objectStore.legion.id,i.localOP),i.objectStore.propagate(i.objectID,i.objectStore.legion.id,i.localOP,{all:!0});var n=i.remotes[e].apply(i,[t]);i.callback&&i.callback(n,{local:!0})}}}(s[r]);else if(this.crdt.propagation==CRDT.STATE_BASED)for(var r=0;r<s.length;r++)!function(e){i[e]=function(){var t=i.crdt.crdt.operations[e].apply(i,arguments);i.objectStore.propagateState(i.objectID,{all:!0}),i.callback&&i.callback(t,{local:!0})}}(s[r]);else console.error("I am here: "+JSON.stringify(this.crdt));this.callback=null}function ObjectStore(e){this.legion=e,this.types=new ALMap,this.crdts=new ALMap,this.objectServer=null,this.peerSyncs=new ALMap;var t=this;this.handlers={peerSync:{type:"OS:PS",callback:function(e){var o=t.peerSyncs.get(e.sender);o?o.handleSync(e):console.warn("Got OS:PS for unknown peer.")}},peerSyncAnswer:{type:"OS:PSA",callback:function(e){var o=t.peerSyncs.get(e.sender);o?o.handleSyncAnswer(e):console.warn("Got OS:PSA for unknown peer.")}},gotContentFromNetwork:{type:"OS:C",callback:function(e,o,n){t.gotContentFromNetwork(e,o,n)}},version_vector_propagation:{type:"OS:VVP",callback:function(e,o,n){t.gotVVFromNetwork(e,o,n)}}},this.serverQueue=new ALQueue,this.serverTimer=setInterval(function(){t.clearServerQueue()},this.legion.options.objectOptions.serverInterval),this.peersQueue=new ALQueue,this.peersTimer=setInterval(function(){t.clearPeersQueue()},this.legion.options.objectOptions.peerInterval);var o=this.legion.overlay.getPeers();o.length>0&&console.warn("Already have peers!",o.length);for(var n=0;n<o.length;n++){var r=new PeerSync(this.legion,this,o[n]);this.peerSyncs.set(o[n].remoteID,r),r.sync()}this.legion.messagingAPI.setHandlerFor(this.handlers.peerSync.type,this.handlers.peerSync.callback),this.legion.messagingAPI.setHandlerFor(this.handlers.peerSyncAnswer.type,this.handlers.peerSyncAnswer.callback),this.legion.messagingAPI.setHandlerFor(this.handlers.gotContentFromNetwork.type,this.handlers.gotContentFromNetwork.callback),this.legion.messagingAPI.setHandlerFor(this.handlers.version_vector_propagation.type,this.handlers.version_vector_propagation.callback)}function Overlay(e){this.legion=e,this.peers=new ALMap,this.overlayProtocol=new this.legion.options.overlayProtocol(this,this.legion)}function PeerSync(e,t,o){console.log("New peerSync from "+e.id+" to "+o.remoteID),this.legion=e,this.objectStore=t,this.peerConnection=o,this.isSynced=!1,this.queueAfterSync=new ALQueue,this.sharedObjects=new ALMap;var n=this;this.psTimeout=setTimeout(function(){console.error("No PeerSync in time.",n.legion.id,n.peerConnection.remoteID)},5e3)}function PeerConnection(e,t){detailedDebug&&console.log("PC from "+t.id+" to "+e),this.remoteID=e,this.legion=t,this.peer=new RTCPeerConnection(servers,pcConstraint),this.channel=null}function ServerConnection(e,t){this.legion=t,this.server=e,this.remoteID=this.server.ip+":"+this.server.port,this.socket=new WebSocket("ws://"+this.server.ip+":"+this.server.port);var o=this;this.socket.onopen=function(){o.legion.connectionManager.onOpenServer(o)},this.socket.onmessage=function(e){var t=JSON.parse(e.data);console.log("Got "+t.type+" from "+o.remoteID+" s: "+t.sender);var n=JSON.parse(e.data);t.content?decompress(t.content,function(e){t.content=JSON.parse(e),o.legion.messagingAPI.onMessage(o,t,n)}):o.legion.messagingAPI.onMessage(o,t,n)},this.socket.onclose=function(){o.legion.connectionManager.onCloseServer(o)},this.socket.onerror=function(e){console.error("ServerSocket Error",e)}}function SimpleBully(e){this.legion=e;var t=this;this.handlers={bully:{type:"Bully",callback:function(e,o){var n=e.sender,r=(new Date).getTime();n<=t.bully?(t.bully=n,t.lastBullyMessage=r,bullyLog&&console.log("Be bullied by",n)):bullyLog&&console.log("Be bullied by",n,"but mine is",t.bully)}}},this.bully=this.legion.id,this.lastBullyMessage=(new Date).getTime(),this.bullyMustHaveInterval=this.legion.options.bullyProtocol.options.bullyMustHaveInterval,this.bullySendInterval=this.legion.options.bullyProtocol.options.bullySendInterval,this.bullyStartTime=this.legion.options.bullyProtocol.options.bullyStartTime,setTimeout(function(){t.interval=setInterval(function(){t.floodBully()},t.bullySendInterval)},t.bullyStartTime),this.legion.messagingAPI.setHandlerFor(this.handlers.bully.type,this.handlers.bully.callback)}function FloodMessaging(e,t){this.messagingAPI=e,this.legion=t}function SimpleOverlay(e,t){this.overlay=e,this.legion=t;var o=this;this.interval=setInterval(function(){o.floodJoin()},15e3),this.legion.messagingAPI.setHandlerFor("ConnectToAnyNodesPlease",function(e,t,n){o.handleJoin(e,t,n)})}var RTCPeerConnection=null,getUserMedia=null,attachMediaStream=null,reattachMediaStream=null,webrtcDetectedBrowser=null;navigator.mozGetUserMedia?(console.log("This appears to be Firefox"),webrtcDetectedBrowser="firefox",RTCPeerConnection=mozRTCPeerConnection,RTCSessionDescription=mozRTCSessionDescription,RTCIceCandidate=mozRTCIceCandidate,getUserMedia=navigator.mozGetUserMedia.bind(navigator),attachMediaStream=function(e,t){console.log("Attaching media stream"),e.mozSrcObject=t,e.play()},reattachMediaStream=function(e,t){console.log("Reattaching media stream"),e.mozSrcObject=t.mozSrcObject,e.play()},MediaStream.prototype.getVideoTracks=function(){return[]},MediaStream.prototype.getAudioTracks=function(){return[]}):navigator.webkitGetUserMedia?(debug&&console.log("This appears to be Chrome"),webrtcDetectedBrowser="chrome",RTCPeerConnection=webkitRTCPeerConnection,getUserMedia=navigator.webkitGetUserMedia.bind(navigator),attachMediaStream=function(e,t){"undefined"!=typeof e.srcObject?e.srcObject=t:"undefined"!=typeof e.mozSrcObject?e.mozSrcObject=t:"undefined"!=typeof e.src?e.src=URL.createObjectURL(t):console.log("Error attaching stream to element.")},reattachMediaStream=function(e,t){e.src=t.src},webkitMediaStream.prototype.getVideoTracks||(webkitMediaStream.prototype.getVideoTracks=function(){return this.videoTracks},webkitMediaStream.prototype.getAudioTracks=function(){return this.audioTracks}),webkitRTCPeerConnection.prototype.getLocalStreams||(webkitRTCPeerConnection.prototype.getLocalStreams=function(){return this.localStreams},webkitRTCPeerConnection.prototype.getRemoteStreams=function(){return this.remoteStreams})):(RTCPeerConnection=null,console.log("Browser does not appear to be WebRTC-capable")),"undefined"!=typeof exports&&(exports.ALMap=ALMap),ALMap.prototype.set=function(e,t){this.map[e]=t},ALMap.prototype["delete"]=function(e){delete this.map[e]},ALMap.prototype.get=function(e){return this.map[e]},ALMap.prototype.contains=function(e){return"undefined"!=typeof this.map[e]},ALMap.prototype.keys=function(){return Object.keys(this.map)},ALMap.prototype.values=function(){for(var e=[],t=this.keys(),o=0;o<t.length;o++)e.push(this.get(t[o]));return e},ALMap.prototype.size=function(){return Object.keys(this.map).length},ALMap.prototype.clear=function(){return this.map=[]},ConnectionManager.prototype.startSignallingConnection=function(){new this.legion.options.signallingConnection.type(this.legion.options.signallingConnection.server,this.legion)},ConnectionManager.prototype.hasPeer=function(e){return this.peerConnections.contains(e)},ConnectionManager.prototype.connectPeer=function(e){this.peerConnections.set(e,new PeerConnection(e,this.legion)),this.peerConnections.get(e).startLocal()},ConnectionManager.prototype.connectPeerRemote=function(e){var t=e.sender,o=e.content,n=this.peerConnections.get(t);n?t<this.legion.id&&(this.peerConnections.get(t).cancelAll(),this.peerConnections["delete"](t),this.peerConnections.set(t,new PeerConnection(t,this.legion)),this.peerConnections.get(t).startRemote(o)):(this.peerConnections.set(t,new PeerConnection(t,this.legion)),this.peerConnections.get(t).startRemote(o))},ConnectionManager.prototype.handleSignalling=function(e,t){if(e.destination!=this.legion.id)this.legion.messagingAPI.broadcastMessage(t);else switch(e.type){case"OfferAsAnswer":return void this.connectPeerRemote(e);case"OfferReturn":return void this.peerConnections.get(e.sender).returnOffer(e.content);case"ICE":return void(this.peerConnections.get(e.sender)?this.peerConnections.get(e.sender).return_ice(e.content):console.warn("ICE for no peer",e,this.legion.id))}},ConnectionManager.prototype.onCloseServer=function(e){console.log(this.legion.getTime()+" Overlay CLOSE "+this.legion.id+" to "+e.remoteID+" of type "+e.constructor.name),this.serverConnection=null,e instanceof this.legion.options.signallingConnection.type&&(this.serverConnection=null,this.legion.overlay.onServerDisconnect(e)),e instanceof this.legion.options.objectServerConnection.type&&(this.legion.objectStore?this.legion.objectStore.onServerDisconnect(e):console.error("Should not disconnect form objects server when not having an objects store!")),this.legion.bullyProtocol&&this.legion.bullyProtocol.onServerDisconnect(e)},ConnectionManager.prototype.onOpenServer=function(e){console.log(this.legion.getTime()+" Overlay OPEN "+this.legion.id+" to "+e.remoteID+" of type "+e.constructor.name),e instanceof this.legion.options.signallingConnection.type&&(this.serverConnection=e,this.legion.overlay.onServerConnection(e)),e instanceof this.legion.options.objectServerConnection.type&&(this.legion.objectStore?this.legion.objectStore.onServerConnection(e):console.error("Should not connect to objects server when not having an objects store!")),this.legion.bullyProtocol&&this.legion.bullyProtocol.onServerConnection(e)},ConnectionManager.prototype.onOpenClient=function(e){console.log(this.legion.getTime()+" Overlay OPEN "+this.legion.id+" to "+e.remoteID),this.legion.overlay.addPeer(e),this.legion.objectStore&&this.legion.objectStore.onClientConnection(e),this.legion.bullyProtocol&&this.legion.bullyProtocol.onClientConnection(e)},ConnectionManager.prototype.onCloseClient=function(e){console.log(this.legion.getTime()+" Overlay CLOSE "+this.legion.id+" to "+e.remoteID),this.peerConnections["delete"](e.remoteID),this.legion.overlay.removePeer(e),this.legion.objectStore&&this.legion.objectStore.onClientDisconnect(e),this.legion.bullyProtocol&&this.legion.bullyProtocol.onClientDisconnect(e)},ConnectionManager.prototype.sendStartOffer=function(e,t){var o=this;this.legion.generateMessage("OfferAsAnswer",e,function(e){e.destination=t.remoteID,o.legion.messagingAPI.broadcastMessage(e)})},ConnectionManager.prototype.sendReturnOffer=function(e,t){var o=this;this.legion.generateMessage("OfferReturn",e,function(e){e.destination=t.remoteID,o.legion.messagingAPI.broadcastMessage(e)})},ConnectionManager.prototype.sendICE=function(e,t){var o=this;this.legion.generateMessage("ICE",e,function(e){e.destination=t.remoteID,o.legion.messagingAPI.broadcastMessage(e)})},"undefined"!=typeof exports&&(exports.ALQueue=ALQueue),ALQueue.prototype.size=function(){return this.queue.length},ALQueue.prototype.push=function(e){this.queue.push(e)},ALQueue.prototype.pop=function(){var e=this.queue[0];return this.queue=this.queue.slice(1),e},ALQueue.prototype.clear=function(){this.queue=[]},Legion.prototype.join=function(){this.connectionManager.startSignallingConnection()},Legion.prototype.getMessageAPI=function(){return this.messagingAPI},Legion.prototype.getObjectStore=function(){return this.objectStore||(this.objectStore=new ObjectStore(this)),this.objectStore},Legion.prototype.generateMessage=function(e,t,o){function n(e){var t=0;return function(o,n){return 0!==t&&"object"==typeof e&&"object"==typeof n&&e==n?"[Circular]":t>=29?"[Unknown]":(++t,n)}}if(!e)return void console.error("No type for message.");var r={type:e,sender:this.id,ID:++this.messageCount};if(t){var s;try{s=JSON.stringify(t)}catch(i){return console.error(i),console.error(t),console.log("Censoring: ",t),void console.log("Result: ",JSON.stringify(t,n(t)))}compress(s,function(e){r.content=e,o(r)},function(e){console.error("Compress failed!",e),o(null)})}else o(r)},Legion.prototype.reGenerateMessage=function(e,t,o){t?compress(JSON.stringify(t),function(t){e.content=t,o(e)},function(e){console.error("Compress failed!",e),o(null)}):(e.content&&delete e.content,o(e))},Legion.prototype.getTime=function(){return Date.now()},"undefined"!=typeof exports&&(exports.compress=compress,exports.decompress=decompress,LZMA=require("./../../node_modules/lzma"));var fromDecToHex=function(e){if(0>e)return e=4294967295+e+1,e.toString(16).substring(6,8);var t=e.toString(16);return 1==t.length&&(t="0"+t),t},fromHexToDec=function(e){return parseInt(e,16)};MessagingAPI.prototype.onMessage=function(e,t,o){return t.sender==this.legion.id?void console.warn("Return to creator fault",t,e.remoteID):this.duplicates.contains(t.sender,t.ID)?void console.log("Duplicate: ("+t.sender+","+t.ID):(this.duplicates.add(t.sender,t.ID),debug&&console.log(t.type+" from "+e.remoteID+" by "+t.sender+" to "+t.destination),detailedDebug&&console.log(t),void(!t.destination||t.destination&&t.destination==this.legion.id?this.deliver(t,o,e):this.messagingProtocol.onMessage(e,t,o)))},MessagingAPI.prototype.deliver=function(e,t,o){this.callbacks.contains(e.type)?this.callbacks.get(e.type)(e,t,o):console.error("can't deliver: no handler defined",JSON.stringify(e))},MessagingAPI.prototype.broadcastMessage=function(e,t){this.messagingProtocol.broadcastMessage(e,t)},MessagingAPI.prototype.sendTo=function(e,t){t.destination&&console.warn("Notice: message had a pre-defined destination!"),this.messagingProtocol.sendTo(e,t)},MessagingAPI.prototype.broadcast=function(e,t){var o=this;this.legion.generateMessage(e,t,function(e){o.broadcastMessage(e)})},MessagingAPI.prototype.setHandlerFor=function(e,t){this.callbacks.set(e,t)},"undefined"!=typeof exports&&(exports.Duplicates=Duplicates),Duplicates.prototype.add=function(e,t){this.senders[e]||(this.senders[e]=new RangeSet),this.senders[e].add(t)},Duplicates.prototype.contains=function(e,t){return this.senders[e]?this.senders[e].contains(t):!1},Duplicates.prototype.print=function(){for(var e=Object.keys(this.senders),t=0;t<e.length;t++)console.log(e[t]),this.senders[e[t]].print()},RangeSet.prototype.add=function(e){for(var t=this.pairs.length-1;t>=0;t--){if(e>=this.pairs[t].first&&e<=this.pairs[t].last)return;if(e==this.pairs[t].last+1){for(this.pairs[t].last+=1;this.pairs[t-1]&&this.pairs[t].last==this.pairs[t-1].first-1;)this.pairs[t].last=this.pairs[t-1].last,this.pairs.splice(t-1,1),t--;return}if(e==this.pairs[t].first-1)return void(this.pairs[t].first-=1);if(e<this.pairs[t].first)return void this.pairs.splice(t+1,0,{first:e,last:e})}this.pairs.splice(0,0,{first:e,last:e})},RangeSet.prototype.contains=function(e){for(var t=0;t<this.pairs.length;t++)if(e>=this.pairs[t].first&&e<=this.pairs[t].last)return!0;return!1},RangeSet.prototype.print=function(){for(var e=0;e<this.pairs.length;e++)console.log(this.pairs[e].first+" : "+this.pairs[e].last)},ObjectServerConnection.prototype.send=function(e){"object"==typeof e&&(e=JSON.stringify(e)),this.socket.readyState==WebSocket.OPEN&&(console.log("Sent "+JSON.parse(e).type+" to "+this.remoteID+" s: "+JSON.parse(e).sender),this.socket.send(e))},"undefined"!=typeof exports&&(CRDT_Database=!0,exports.CRDT=CRDT);var crtd_type={type:"crdtType",propagation:1,crdt:{base_value:function(){},getValue:function(){},operations:{},merge:function(e,t){},compare:function(e,t){},fromJSONString:function(e){},toJSONString:function(e){}}};CRDT.STATE_BASED=1,CRDT.OP_BASED=2,CRDT.STATE=Object.freeze({COMPARE_RESPONSE:{EQUALS:1,LOWER:2,HIGHER:3,MUST_MERGE:4}}),CRDT.prototype.addOpToCurrentVersionVector=function(e,t){this.versionVector.set(e,t)},CRDT.prototype.addOpToHistory=function(e,t,o,n,r){var s=this.opHistory.get(e);s||(s=new ALMap,this.opHistory.set(e,s)),s.set(t,{dependencyVV:r,opID:t,result:o,opName:n})},CRDT.prototype.getOpFromHistory=function(e,t){var o=this.opHistory.get(e);if(o)return o.get(t)},CRDT.prototype.getState=function(){return this.state},CRDT.prototype.setOnStateChange=function(e){this.callback=e},CRDT.prototype.getOperations=function(e){for(var t=[],o=Object.keys(e),n=0;n<o.length;n++)for(var r=o[n],s=e[r],i=0;i<s.length;i++){var a=s[i],c=this.getOpFromHistory(r,a);c.clientID=r,t.push(c)}return t},CRDT.prototype.getVersionVector=function(){for(var e=this.versionVector.keys(),t={},o=0;o<e.length;o++)t[e[o]]=this.versionVector.get(e[o]);return t},CRDT.prototype.stateFromNetwork=function(e,t,o){var n=this.compare(this.getState(),e);switch(n){case CRDT.STATE.COMPARE_RESPONSE.EQUALS:break;case CRDT.STATE.COMPARE_RESPONSE.LOWER:this.objectStore.propagateState(this.objectID,{onlyTo:t});break;case CRDT.STATE.COMPARE_RESPONSE.HIGHER:var r=this.merge(this.getState(),e);this.state=r.mergeResult,this.callback&&this.callback(r.stateChange,{local:!1}),o?(o.options={except:t.remoteID},this.objectStore.propagateMessage(o)):this.objectStore.propagateState(this.objectID,{except:t});break;case CRDT.STATE.COMPARE_RESPONSE.MUST_MERGE:var r=this.merge(this.getState(),e);this.state=r.mergeResult,this.callback&&this.callback(r.stateChange,{local:!1}),this.objectStore.propagateState(this.objectID,{all:!0})}},CRDT.prototype.operationsFromNetwork=function(e,t,o){for(var n=[],r=[],s=[],i=0,a=e.length;e.length>0;){var c=!1;for(console.log("Operations to go:"+e.length);i<e.length;){var l=e[i];if(this.alreadyHadOp(l))s.push(l),e.splice(i,1),c=!0;else if(this.depsMatchedFor(l)){var p=this.remotes[l.opName].apply(this,[l.result]);this.addOpToHistory(l.clientID,l.opID,l.result,l.opName,l.dependencyVV),this.addOpToCurrentVersionVector(l.clientID,l.opID),n.push(p),r.push(l),e.splice(i,1),c=!0}else i++}if(!c){console.log(this.getState()),console.log(this.getVersionVector()),console.log(e),this.objectStore.sendVVToNode(this.objectID,t.remoteID);break}i=0}s.length>0&&console.warn("Already had:",s),n.length>0&&this.callback&&this.callback(n,{local:!1}),r.length==a?o?(o.options={except:t.remoteID},this.objectStore.propagateMessage(o)):this.objectStore.propagateAll(this.objectID,r,{except:t}):r.length>0&&this.objectStore.propagateAll(this.objectID,r,{except:t})},CRDT.prototype.depsMatchedFor=function(e){for(var t=e.dependencyVV,o=Object.keys(t),n=0;n<o.length;n++)if(!this.alreadyHadOperation(o[n],t[o[n]]))return!1;return!0},CRDT.prototype.alreadyHadOp=function(e){return this.alreadyHadOperation(e.clientID,e.opID)},CRDT.prototype.alreadyHadOperation=function(e,t){return this.versionVector.contains(e)?t<=this.versionVector.get(e):!1};var CRDT_LIB={};ObjectStore.prototype.gotVVFromNetwork=function(e,t){var o=e.content.objectID,n=e.content.vv,r=this.crdts.get(o);r||console.warn("Not implemented: vv for CRDT I do not have.");var s=this.versionVectorDiff(r.getVersionVector(),n),i=this;if(s.vv2.missing.length>0){objectsDebug&&console.log("Peer is missing ops.");var a=r.getOperations(s.vv2.missing),c=[];c.push({objectID:o,operations:a}),this.legion.generateMessage(this.handlers.operations_propagation.type,c,function(t){if(i.peerSyncs.contains(e.sender)){t.destination=e.sender;var o=i.peerSyncs.get(e.sender);o.send(t)}else i.legion.messagingAPI.sendTo(e.sender,t)})}s.vv1.missing.length>0&&(objectsDebug&&console.log("I am missing ops."),this.sendVVToNode(o,e.sender))},ObjectStore.prototype.sendVVToNode=function(e,t){var o=this.crdts.get(e),n={objectID:e,vv:o.getVersionVector()},r=this;this.legion.generateMessage(this.handlers.version_vector_propagation.type,n,function(e){if(e.destination=t,r.peerSyncs.contains(t)&&1==r.peerSyncs.get(t).peerConnection.socket.readyState){var o=r.peerSyncs.get(t);o.send(e)}else r.legion.messagingAPI.sendTo(t,e)})},ObjectStore.prototype.onMessageFromServer=function(e,t,o){switch(e.type){case this.handlers.peerSync.type:return void this.objectServer.handleSync(e,t,o);case this.handlers.peerSyncAnswer.type:return void this.objectServer.handleSyncAnswer(e,t,o);case this.handlers.gotContentFromNetwork.type:return void this.handlers.gotContentFromNetwork.callback(e,t,o);case this.handlers.version_vector_propagation.type:return void this.handlers.version_vector_propagation.callback(e,t,o)}console.error("No typedef for: "+e)},ObjectStore.prototype.gotContentFromNetwork=function(e,t,o){switch(t.options||(t.options={}),t.options.except=o,e.content.type){case"OP":var n=e.content.msg.objectID,r=this.crdts.get(n);r?r.operationsFromNetwork([e.content.msg],o,t):console.error("Got op for no crdt",e);break;case"OPLIST":var s=e.content.ops,r=this.crdts.get(e.content.objectID);r.operationsFromNetwork(s,o,t);break;case"STATE":var n=e.content.msg.objectID,r=this.crdts.get(n);r?r.stateFromNetwork(r.fromJSONString(e.content.msg.state),o,t):console.error("Got state for no crdt",e)}},ObjectStore.prototype.propagateMessage=function(e){this.serverQueue.push(e),this.peersQueue.push(e)},ObjectStore.prototype.connectToObjectServer=function(){new this.legion.options.objectServerConnection.type(this.legion.options.objectServerConnection.server,this,this.legion)},ObjectStore.prototype.clearServerQueue=function(){var e=this;if(this.legion.bullyProtocol.amBullied())this.serverQueue.size()>0&&(console.log("Clearing server queue. Am bullied."),this.serverQueue.clear());else if(!this.objectServer)return console.log("Don't have a connection to objects server. Will try again soon."),void this.connectToObjectServer();if(this.serverQueue.size()>0)for(var t=this.serverQueue.pop();t;)!function(t){var o=t.options;if(o.onlyTo&&"string"!=typeof o.onlyTo&&(o.onlyTo=o.onlyTo.remoteID),o.except&&"string"!=typeof o.except&&(o.except=o.except.remoteID),!(o.except&&o.except==e.objectServer.peerConnection||o.except&&o.except==e.objectServer.peerConnection.remoteID))if(t.sender)e.legion.generateMessage("Fake",{fake:"data"},function(o){e.objectServer.send(t)});else{var n={};switch(t.type){case"OP":var r=t.objectID,s=t.clientID,i=t.operationID,a=e.crdts.get(r),c=a.getOpFromHistory(s,i);c.clientID=s,c.objectID=r,n=c;break;case"OPLIST":break;case"STATE":var r=t.objectID,a=e.crdts.get(r),l=a.toJSONString(a.getState());n={objectID:r,state:l}}t.msg=n,e.legion.generateMessage(e.handlers.gotContentFromNetwork.type,t,function(t){e.objectServer.send(t)})}}(t),t=this.serverQueue.pop()},ObjectStore.prototype.clearPeersQueue=function(){var e=this;if(this.peersQueue.size()>0){console.log("Messages in queue: "+this.peersQueue.size());for(var t=this.peersQueue.pop();t;)!function(t){var o=t.options;const n=o.except;if(o.onlyTo&&"string"!=typeof o.onlyTo&&(o.onlyTo=o.onlyTo.remoteID),o.except&&"string"!=typeof o.except&&(o.except=o.except.remoteID),t.sender)e.legion.messagingAPI.broadcastMessage(t,[e.legion.connectionManager.serverConnection]);else{var r={};switch(t.type){case"OP":var s=t.objectID,i=t.clientID,a=t.operationID,c=e.crdts.get(s),l=c.getOpFromHistory(i,a);l.clientID=i,l.objectID=s,r=l;break;case"OPLIST":break;case"STATE":var s=t.objectID,c=e.crdts.get(s),p=c.toJSONString(c.getState());r={objectID:s,state:p}}t.msg=r,e.legion.generateMessage(e.handlers.gotContentFromNetwork.type,t,function(t){const r=o.onlyTo;if(r)if(t.destination=r,e.peerSyncs.contains(r)){t.destination=r;var s=e.peerSyncs.get(r);s.send(t)}else e.legion.messagingAPI.sendTo(r,t);else n?e.legion.messagingAPI.broadcastMessage(t,[n,e.legion.connectionManager.serverConnection]):e.legion.messagingAPI.broadcastMessage(t,[e.legion.connectionManager.serverConnection])})}}(t),t=this.peersQueue.pop()}},ObjectStore.prototype.defineCRDT=function(e){this.types.contains(e.type)?console.error("Can't redefine existing CRDT.",e):this.types.set(e.type,e)},ObjectStore.prototype.get=function(e,t){if(this.types.contains(t)){if(this.crdts.contains(e))return this.crdts.get(e);var o=this.types.get(t),n=new CRDT(e,o,this);return this.crdts.set(e,n),n}console.error("No typedef found for CRDT.",t)},ObjectStore.prototype.propagate=function(e,t,o,n){var r={type:"OP",clientID:t,objectID:e,operationID:o,options:n};this.serverQueue.push(r),this.peersQueue.push(r)},ObjectStore.prototype.propagateAll=function(e,t,o){var n={type:"OPLIST",ops:t,objectID:e,options:o};this.serverQueue.push(n),this.peersQueue.push(n)},ObjectStore.prototype.onServerDisconnect=function(e){this.objectServer=null,this.serverQueue.clear()},ObjectStore.prototype.onServerConnection=function(e){this.objectServer=new PeerSync(this.legion,this,e),this.objectServer.sync()},ObjectStore.prototype.onClientConnection=function(e){var t=new PeerSync(this.legion,this,e);this.peerSyncs.set(e.remoteID,t),t.sync()},ObjectStore.prototype.onClientDisconnect=function(e){var t=this.peerSyncs.get(e.remoteID);this.peerSyncs["delete"](e.remoteID),t.finalize()},ObjectStore.prototype.versionVectorDiff=function(e,t){for(var o={vv1:{missing:{}},vv2:{missing:{}}},n=Object.keys(e),r=Object.keys(t),s=0;s<n.length;s++){var i=n[s];if(t[i]){if(t[i]>e[i]){o.vv1.missing[i]=[];for(var a=e[i]+1;a<=t[i];a++)o.vv1.missing[i].push(a)}}else{o.vv2.missing[i]=[];for(var a=1;a<=e[i];a++)o.vv2.missing[i].push(a)}}for(var c=0;c<r.length;c++){var i=r[s];if(e[i]){if(e[i]>t[i]){o.vv2.missing[i]=[];for(var a=t[i]+1;a<=e[i];a++)o.vv2.missing[i].push(a)}}else{o.vv1.missing[i]=[];for(var a=1;a<=t[i];a++)o.vv1.missing[i].push(a)}}return o},ObjectStore.prototype.propagateState=function(e,t){var o={type:"STATE",objectID:e,options:t};this.serverQueue.push(o),this.peersQueue.push(o)},ObjectStore.prototype.getCRDT=function(e){return this.crdts.get(e)},Overlay.prototype.peerCount=function(){return this.peers.size()},Overlay.prototype.addPeer=function(e){this.peers.set(e.remoteID,e),this.overlayProtocol.onClientConnection(e)},Overlay.prototype.removePeer=function(e){this.peers["delete"](e.remoteID),this.overlayProtocol.onClientDisconnect(e)},Overlay.prototype.onServerDisconnect=function(e){this.overlayProtocol.onServerDisconnect(e)},Overlay.prototype.onServerConnection=function(e){this.overlayProtocol.onServerConnection(e)},Overlay.prototype.getPeers=function(e){e||(e=this.peerCount());var t=this.shuffle(this.peers.values());return t.slice(0,e)},Overlay.prototype.shuffle=function(e){var t,o,n=e.length;if(n)for(;--n;)o=Math.floor(Math.random()*(n+1)),t=e[o],e[o]=e[n],e[n]=t;return e},"undefined"!=typeof exports&&(exports.PeerSync=PeerSync,ALMap=require("./ALMap.js"),ALMap=ALMap.ALMap,ALQueue=require("./ALQueue.js"),ALQueue=ALQueue.ALQueue),PeerSync.prototype.send=function(e){this.isSynced&&0==this.queueAfterSync.size()?this.peerConnection.send(e):this.queueAfterSync.push(e)},PeerSync.prototype.finalize=function(){this.isSynced=!1,this.peerConnection=null,this.queueAfterSync.clear(),this.queueAfterSync=null,this.sharedObjects.clear(),this.sharedObjects=null,clearTimeout(this.psTimeout)},PeerSync.prototype.clearQueue=function(){if(this.isSynced){var e=this.queueAfterSync.pop();for(e&&console.log("Clearing queue to: "+this.peerConnection.remoteID+". Size of queue: "+(this.queueAfterSync.size()+1));"undefined"!=typeof e;)this.peerConnection.send(e),e=this.queueAfterSync.pop()}else console.error("Clearing queue before sync.")},PeerSync.prototype.handleSyncAnswer=function(e){for(var t=e.content.states,o=e.content.missing_ops,n=0;n<t.length;n++){var r=this.objectStore.getCRDT(t[n].id,t[n].type);r?r.stateFromNetwork(r.fromJSONString(t[n].state),this.peerConnection):console.log("I should not be here.")}for(var s=0;s<o.length;s++){var i=this.objectStore.getCRDT(o[s].id,o[s].type);i?i.operationsFromNetwork(o[s].operations,this.peerConnection):console.log("I should not be here.")}clearTimeout(this.psTimeout),this.isSynced=!0,this.clearQueue()},PeerSync.prototype.handleSync=function(e){for(var t=e.content.stateObjects,o=e.content.operationObjects,n={missing_ops:[],states:[]},r=0;r<o.length;r++){var s=this.objectStore.getCRDT(o[r].id,o[r].type);if(s){var i=s.getVersionVector(),a=this.objectStore.versionVectorDiff(i,o[r].vv);Object.keys(a.vv2.missing).length>0&&n.missing_ops.push({id:s.objectID,operations:s.getOperations(a.vv2.missing)})}}for(var c=0;c<t.length;c++){var l=this.objectStore.getCRDT(t[c].id,t[c].type);l&&n.states.push({id:l.objectID,state:l.toJSONString(l.getState())})}var p=this;this.legion.generateMessage(this.objectStore.handlers.peerSyncAnswer.type,n,function(e){e.destination=p.peerConnection.remoteID,p.peerConnection.send(JSON.stringify(e))})},PeerSync.prototype.sync=function(){for(var e=this,t={stateObjects:[],operationObjects:[]},o=this.objectStore.crdts.keys(),n=0;n<o.length;n++){var r=this.objectStore.getCRDT(o[n]);r.crdt.propagation==CRDT.STATE_BASED?t.stateObjects.push({id:r.objectID,type:r.crdt.type}):r.crdt.propagation==CRDT.OP_BASED?t.operationObjects.push({id:r.objectID,vv:r.getVersionVector(),type:r.crdt.type
}):console.error("Shit happened.")}this.legion.generateMessage(this.objectStore.handlers.peerSync.type,t,function(t){t.destination=e.peerConnection.remoteID,"undefined"!=typeof CRDT_Database&&console.log("Send "+t.type+" to "+e.peerConnection.remoteID+" s: "+t.sender),e.peerConnection.send(JSON.stringify(t))})},PeerConnection.prototype.setChannelHandlers=function(){var e=this;this.channel.onmessage=function(t){var o=JSON.parse(t.data);console.log("Got "+o.type+" from "+e.remoteID+" s: "+o.sender);var n=JSON.parse(t.data);if(o.content)try{decompress(o.content,function(t){o.content=JSON.parse(t),e.legion.messagingAPI.onMessage(e,o,n)})}catch(r){console.error(t),console.error(o),console.error(n),console.error(r)}else e.legion.messagingAPI.onMessage(e,o,n)},this.channel.onopen=function(t){e.legion.connectionManager.onOpenClient(e)},this.channel.onclose=function(t){e.legion.connectionManager.onCloseClient(e)}},PeerConnection.prototype.cancelAll=function(){var e=this;this.channel.onclose=function(){console.log("Forced a channel close for duplicate PeerConnection.",e.legion.id,e.remoteID)},this.channel=null,this.remoteID=null,this.peer.close(),this.peer=null},PeerConnection.prototype.returnOffer=function(e){detailedDebug&&console.log(e),this.peer.setRemoteDescription(new RTCSessionDescription(e))},PeerConnection.prototype.return_ice=function(e){detailedDebug&&console.log(e);var t=this;this.peer.addIceCandidate(new RTCIceCandidate(e),function(){},function(o){console.warn("onAddIceCandidateError",t.legion.id,t.remoteID,o,e)})},PeerConnection.prototype.onicecandidate=function(e){e.candidate&&this.legion.connectionManager.sendICE(e.candidate,this)},PeerConnection.prototype.startLocal=function(){debug&&console.log("start local: "+this.remoteID);var e=this;this.channel=this.peer.createDataChannel("sendDataChannel",dataConstraint),this.setChannelHandlers(),this.peer.onicecandidate=function(t){e.onicecandidate(t)},this.peer.createOffer(function(t){e.peer.setLocalDescription(t),e.legion.connectionManager.sendStartOffer(t,e)},function(t){console.error("onCreateSessionDescriptionError",t),e.onclose()})},PeerConnection.prototype.startRemote=function(e){detailedDebug&&console.log(e),debug&&console.log("start remote: "+this.remoteID),this.peer.setRemoteDescription(new RTCSessionDescription(e));var t=this;this.peer.ondatachannel=function(e){t.channel=e.channel,t.setChannelHandlers()},this.peer.onicecandidate=function(e){t.onicecandidate(e)},this.peer.createAnswer(function(e){t.peer.setLocalDescription(e),t.legion.connectionManager.sendReturnOffer(e,t)},function(e){console.error("onCreateSessionDescriptionError",e),t.onclose()})},PeerConnection.prototype.send=function(e){"object"==typeof e&&(e=JSON.stringify(e)),this.channel&&"open"==this.channel.readyState?(this.channel.send(e),console.log("Sent "+JSON.parse(e).type+" to "+this.remoteID+" s: "+JSON.parse(e).sender)):console.warn("Peer has no open channel.")};var servers={iceServers:[{url:"stun:stun.l.google.com:19302"}]},pcConstraint={optional:[{RtpDataChannels:!1}]},dataConstraint=null;ServerConnection.prototype.send=function(e){"object"==typeof e&&(e=JSON.stringify(e)),this.socket.readyState==WebSocket.OPEN&&(console.log("Sent "+JSON.parse(e).type+" to "+this.remoteID+" s: "+JSON.parse(e).sender),this.socket.send(e))},"undefined"==typeof generateUniqueIdentifier&&(generateUniqueIdentifier=function(){return(""+Math.random()).substr(2)}),"undefined"!=typeof exports&&(CRDT=require("./../crdt.js"),CRDT=CRDT.CRDT,ALMap=require("./../ALMap.js"),ALMap=ALMap.ALMap);var op_orset={type:"OP_ORSet",propagation:CRDT.OP_BASED,crdt:{base_value:{state:{adds:ALMap,removes:ALMap}},getValue:function(){return this.state.adds.keys()},operations:{add:{local:function(e){var t=generateUniqueIdentifier();return{element:e,unique:t}},remote:function(e){if(!this.state.removes.contains(e.unique)){this.state.adds.contains(e.element)||this.state.adds.set(e.element,new ALMap);var t=this.state.adds.get(e.element);if(!t.contains(e.unique))return t.set(e.unique,!0),{add:e.element}}}},remove:{local:function(e){var t=this.state.adds.get(e);if(!t)return{element:e,removes:[]};var o=t.keys();return{element:e,removes:o}},remote:function(e){if(0==e.removes.length)return{};for(var t=this.state.adds.get(e.element),o=0;o<e.removes.length;o++)this.state.removes.set(e.removes[o],!0),t&&t["delete"](e.removes[o]);return t&&0==t.size()?(this.state.adds["delete"](e.element),{remove:e.element}):void 0}}}}};"undefined"!=typeof exports?exports.OP_ORSet=op_orset:CRDT_LIB.OP_ORSet=op_orset,SimpleBully.prototype.onClientConnection=function(e){if(e.remoteID>this.legion.id){this.legion.generateMessage(this.handlers.bully.type,null,function(t){bullyLog&&console.log("Being immediate bully to",e.remoteID),e.send(t)})}},SimpleBully.prototype.onClientDisconnect=function(e){},SimpleBully.prototype.onServerConnection=function(e){this.amBullied()||this.floodBully()},SimpleBully.prototype.onServerDisconnect=function(e){},SimpleBully.prototype.amBullied=function(){if(this.bully==this.legion.id)return!1;var e=(new Date).getTime()-this.lastBullyMessage;return e<=this.bullyMustHaveInterval},SimpleBully.prototype.floodBully=function(){if(this.amBullied())bullyLog&&console.log("My bully",this.bully,this.lastBullyMessage);else{bullyLog&&console.log("Being bully."),this.bully=this.legion.id,this.lastBullyMessage=(new Date).getTime();var e=this;this.legion.generateMessage(this.handlers.bully.type,null,function(t){for(var o=e.legion.overlay.getPeers(e.legion.overlay.peerCount()),n=0;n<o.length;n++)bullyLog&&console.log("Being bully to",o[n].remoteID),o[n].send(t)})}},"undefined"!=typeof exports&&(CRDT=require("./../crdt.js"),CRDT=CRDT.CRDT,ALMap=require("./../ALMap.js"),ALMap=ALMap.ALMap);var state_counter={type:"STATE_Counter",propagation:CRDT.STATE_BASED,crdt:{base_value:{state:{dec:ALMap,inc:ALMap}},getValue:function(){for(var e=0,t=this.state.dec.keys(),o=this.state.inc.keys(),n=0;n<t.length;n++)e-=this.state.dec.get(t[n]);for(var r=0;r<o.length;r++)e+=this.state.inc.get(o[r]);return e},operations:{increment:function(e,t){return this.state.inc.contains(e)||this.state.inc.set(e,0),this.state.inc.set(e,this.state.inc.get(e)+t),t},decrement:function(e,t){return this.state.dec.contains(e)||this.state.dec.set(e,0),this.state.dec.set(e,this.state.dec.get(e)+t),-t}},merge:function(e,t){for(var o=t.dec.keys(),n=t.inc.keys(),r=0,s=0;s<o.length;s++){var i=e.dec.get(o[s]);i?(r+=e.dec.get(o[s])-t.dec.get(o[s]),e.dec.set(o[s],Math.max(e.dec.get(o[s]),t.dec.get(o[s])))):(e.dec.set(o[s],t.dec.get(o[s])),r-=t.dec.get(o[s]))}for(var s=0;s<n.length;s++){var i=e.inc.get(n[s]);i?(r-=e.inc.get(n[s])-t.inc.get(n[s]),e.inc.set(n[s],Math.max(e.inc.get(n[s]),t.inc.get(n[s])))):(e.inc.set(n[s],t.inc.get(n[s])),r+=t.inc.get(n[s]))}var a={};return a.mergeResult=e,a.stateChange=r,a},compare:function(e,t){var o=!1,n=!1,r=e.inc,s=t.inc,i=e.dec,a=t.dec;if((r.size()>s.size()||i.size()>a.size())&&(o=!0),(s.size()>r.size()||a.size()>i.size())&&(n=!0),o&&n)return CRDT.STATE.COMPARE_RESPONSE.MUST_MERGE;if(!o){for(var c=r.keys(),l=0;l<c.length;l++){var p=c[l];if(!s.contains(p))return CRDT.STATE.COMPARE_RESPONSE.MUST_MERGE;if(r.get(p)>s.get(p)){o=!0;break}}for(var g=i.keys(),l=0;l<g.length;l++){var p=g[l];if(!a.contains(p))return CRDT.STATE.COMPARE_RESPONSE.MUST_MERGE;if(i.get(p)>a.get(p)){o=!0;break}}}if(!n){for(var h=s.keys(),l=0;l<h.length;l++){var p=h[l];if(!r.contains(p))return CRDT.STATE.COMPARE_RESPONSE.MUST_MERGE;if(s.get(p)>r.get(p)){n=!0;break}}for(var u=a.keys(),l=0;l<u.length;l++){var p=u[l];if(!i.contains(p))return CRDT.STATE.COMPARE_RESPONSE.MUST_MERGE;if(a.get(p)>i.get(p)){n=!0;break}}}return o&&!n?CRDT.STATE.COMPARE_RESPONSE.LOWER:!o&&n?CRDT.STATE.COMPARE_RESPONSE.HIGHER:o||n?CRDT.STATE.COMPARE_RESPONSE.MUST_MERGE:CRDT.STATE.COMPARE_RESPONSE.EQUALS},fromJSONString:function(e){for(var t={dec:new ALMap,inc:new ALMap},o=e.dec,n=e.inc,r=0;r<o.length;r++)t.dec.set(o[r][0],o[r][1]);for(var r=0;r<n.length;r++)t.inc.set(n[r][0],n[r][1]);return t},toJSONString:function(e){for(var t=e.dec.keys(),o=e.inc.keys(),n=[],r=[],s=0;s<t.length;s++)n.push([t[s],e.dec.get(t[s])]);for(var s=0;s<o.length;s++)r.push([o[s],e.inc.get(o[s])]);return{dec:n,inc:r}}}};"undefined"!=typeof exports?exports.STATE_Counter=state_counter:CRDT_LIB.STATE_Counter=state_counter,FloodMessaging.prototype.onMessage=function(e,t,o){(!t.destination||t.destination&&t.destination!=this.legion.id)&&(e instanceof PeerConnection?this.broadcastMessage(o,[e]):debug&&console.log("Not broadcasting: "+t.type,this.legion.id,t.sender))},FloodMessaging.prototype.sendTo=function(e,t){t.destination=e,this.broadcastMessage(t,[])},FloodMessaging.prototype.broadcastMessage=function(e,t){var o=this.legion.overlay.getPeers(this.legion.overlay.peerCount());if(e.destination)for(var n=0;n<o.length;n++)if(o[n].remoteID==e.destination)return void o[n].send(e);for(var n=0;n<o.length;n++)if(o[n].remoteID!=e.sender){for(var r=!0,s=0;r&&t&&s<t.length;s++)t[s]&&o[n].remoteID==t[s].remoteID&&(r=!1);r&&o[n].send(e)}var i=this.legion.connectionManager.serverConnection;if(i){for(var n=0;t&&n<t.length;n++)if(t[n]&&i.remoteID==t[n].remoteID)return;i.send(e)}},SimpleOverlay.prototype.onClientConnection=function(e){this.legion.bullyProtocol.amBullied()&&this.legion.connectionManager.serverConnection&&this.legion.connectionManager.serverConnection.socket.close(),this.floodJoin()},SimpleOverlay.prototype.onClientDisconnect=function(e){},SimpleOverlay.prototype.onServerConnection=function(e){this.init()},SimpleOverlay.prototype.onServerDisconnect=function(e){},SimpleOverlay.prototype.init=function(e){this.floodJoin()},SimpleOverlay.prototype.floodJoin=function(){var e=(this.overlay.getPeers(this.overlay.peerCount()),this.legion.connectionManager.serverConnection);e||this.legion.bullyProtocol.amBullied()||this.legion.connectionManager.startSignallingConnection();var t=this;this.legion.generateMessage("ConnectToAnyNodesPlease",null,function(e){t.legion.messagingAPI.broadcastMessage(e)})},SimpleOverlay.prototype.handleJoin=function(e,t,o){this.legion.connectionManager.hasPeer(e.sender)||this.legion.connectionManager.connectPeer(e.sender),this.legion.messagingAPI.broadcastMessage(t,[o]),this.legion.bullyProtocol.amBullied()&&this.legion.connectionManager.serverConnection&&this.legion.connectionManager.serverConnection.socket.close()};
