function ALMap(){this.map=[]}function ALQueue(){this.queue=[]}function ConnectionManager(e){this.legion=e,this.serverConnection=null,this.peerConnections=new ALMap;var t=this;this.legion.messagingAPI.setHandlerFor("OfferAsAnswer",function(e){t.handleSignalling(e)}),this.legion.messagingAPI.setHandlerFor("OfferReturn",function(e){t.handleSignalling(e)}),this.legion.messagingAPI.setHandlerFor("ICE",function(e){t.handleSignalling(e)})}function Duplicates(){this.senders=[]}function RangeSet(){this.pairs=[]}function Legion(e){this.options=e,this.messageCount=0,this.id=this.options.clientID,this.messagingAPI=new MessagingAPI(this,this.legion),this.overlay=new Overlay(this,this.legion),this.connectionManager=new ConnectionManager(this),this.objectStore=new ObjectStore(this)}function CRDT(e,t,n){this.objectStore=n,this.objectID=e,this.crdt=t,this.state={},this.getValue=t.crdt.getValue,this.merge=t.crdt.merge,this.compare=t.crdt.compare,this.fromJSONString=t.crdt.fromJSONString,this.toJSONString=t.crdt.toJSONString;for(var o=Object.keys(this.crdt.crdt.base_value.state),i=0;i<o.length;i++)"function"==typeof this.crdt.crdt.base_value.state[o[i]]?this.state[o[i]]=new this.crdt.crdt.base_value.state[o[i]]:this.state[o[i]]=JSON.parse(JSON.stringify(this.crdt.crdt.base_value.state[o[i]]));this.locals=[],this.remotes=[],this.localOP=0,this.opHistory=new ALMap,this.versionVector=new ALMap;var r=Object.keys(this.crdt.crdt.operations),s=this;if(this.crdt.propagation==CRDT.OP_BASED)for(var i=0;i<r.length;i++)!function(){const e=r[i];s.locals[e]=s.crdt.crdt.operations[e].local,s.remotes[e]=s.crdt.crdt.operations[e].remote,s[e]=function(){var t=s.locals[e].apply(s,arguments),n=s.getVersionVector();if(void 0!=typeof CRDT_Database){s.addOpToHistory("ObjectServer",++s.localOP,t),s.addOpToCurrentVersionVector("ObjectServer",s.localOP),s.objectStore.propagate("ObjectServer",s.localOP,t,n);var o=s.remotes[e].apply(s,[t]);s.callback&&s.callback(o)}else{s.addOpToHistory(s.objectStore.legion.id,++s.localOP,t),s.addOpToCurrentVersionVector(s.objectStore.legion.id,s.localOP),s.objectStore.propagate(s.objectStore.legion.id,s.localOP,t,n);var o=s.remotes[e].apply(s,[t]);s.callback&&s.callback(o)}}}();else if(this.crdt.propagation==CRDT.STATE_BASED)for(var i=0;i<r.length;i++)this[r[i]]=this.crdt.crdt.operations[r[i]];else console.error("I am here: "+JSON.stringify(this.crdt));this.callback=null}function MessagingAPI(e){this.legion=e,this.messagingProtocol=new this.legion.options.messagingProtocol(this,this.legion),this.callbacks=new ALMap,this.duplicates=new Duplicates}function PeerSync(e,t,n){this.legion=e,this.objectStore=t,this.peerConnection=n,this.isSynced=!1,this.queueAfterSync=new ALQueue,this.sharedObjects=new ALMap;var o=this;this.psTimeout=setTimeout(function(){console.error("No PeerSync in time.",o.legion.id,o.peerConnection.remoteID)},5e3)}function ObjectStore(e){this.legion=e,this.types=new ALMap,this.crdts=new ALMap,this.peerSyncs=new ALMap;var t=this;this.handlers={peerSync:{type:"OS:PS",callback:function(e){var n=t.peerSyncs.get(e.sender);clearTimeout(n.psTimeout),n.handleSync(e)}},peerSyncAnswer:{type:"OS:PSA",callback:function(e){var n=t.peerSyncs.get(e.sender);n.handleSyncAnswer(e)}},state_propagation:{type:"OS:SP",callback:function(){console.error("Not Implemented.")}},operations_propagation:{type:"OS:OP",callback:function(){console.error("Not Implemented.")}},version_vector_propagation:{type:"OS:VVP",callback:function(){console.error("Not Implemented.")}}},this.serverQueue=new ALQueue,this.peersQueue=new ALQueue;var n=this.legion.overlay.getPeers();n.length>0&&console.warn("Already have peers!",n.length);for(var o=0;o<n.length;o++){var i=new PeerSync(this.legion,this,n[o]);this.peerSyncs.set(i.remoteID,i),i.sync()}this.legion.messagingAPI.setHandlerFor(this.handlers.peerSync.type,this.handlers.peerSync.callback),this.legion.messagingAPI.setHandlerFor(this.handlers.state_propagation.type,this.handlers.state_propagation.callback),this.legion.messagingAPI.setHandlerFor(this.handlers.operations_propagation.type,this.handlers.operations_propagation.callback),this.legion.messagingAPI.setHandlerFor(this.handlers.version_vector_propagation.type,this.handlers.version_vector_propagation.callback)}function Overlay(e){this.legion=e,this.peers=new ALMap,this.overlayProtocol=new this.legion.options.overlayProtocol(this,this.legion)}function PeerConnection(e,t){detailedDebug&&console.log("PC from "+t.id+" to "+e),this.remoteID=e,this.legion=t,this.peer=new RTCPeerConnection(servers,pcConstraint),this.channel=null}function ServerConnection(e){this.legion=e,this.server=this.legion.options.server,this.remoteID=this.server.ip+":"+this.server.port,this.socket=new WebSocket("ws://"+this.server.ip+":"+this.server.port);var t=this;this.socket.onopen=function(){t.legion.connectionManager.onOpenServer(t)},this.socket.onmessage=function(e){var n=JSON.parse(e.data),o=JSON.parse(e.data);n.content?decompress(n.content,function(e){n.content=JSON.parse(e),t.legion.messagingAPI.onMessage(t,n,o)}):t.legion.messagingAPI.onMessage(t,n,o)},this.socket.onclose=function(){t.legion.connectionManager.onCloseServer(t)},this.socket.onerror=function(e){console.error("ServerSocket Error",e)}}function FloodMessaging(e,t){this.messagingAPI=e,this.legion=t}function SimpleOverlay(e,t){this.overlay=e,this.legion=t;var n=this;this.interval=setInterval(function(){n.floodJoin()},15e3),this.legion.messagingAPI.setHandlerFor("ConnectToAnyNodesPlease",function(e){n.handleJoin(e)})}var fromDecToHex=function(e){if(0>e)return e=4294967295+e+1,e.toString(16).substring(6,8);var t=e.toString(16);return 1==t.length&&(t="0"+t),t},fromHexToDec=function(e){return parseInt(e,16)},compress=function(e,t){"undefined"!=typeof LZMA?LZMA.compress(e,1,function(e){for(var n="",o=0;o<e.length;o++)n+=fromDecToHex(e[o]);t(n)},function(){}):t(e)},decompress=function(e,t){for(var n=[],o=0;o<e.length;o+=2)n.push(fromHexToDec(e[o]+e[o+1]));"undefined"!=typeof LZMA?LZMA.decompress(n,function(e){t(e)},function(){}):t(e)};"undefined"!=typeof exports&&(exports.ALMap=ALMap),ALMap.prototype.set=function(e,t){this.map[e]=t},ALMap.prototype["delete"]=function(e){delete this.map[e]},ALMap.prototype.get=function(e){return this.map[e]},ALMap.prototype.contains=function(e){return"undefined"!=typeof this.map[e]},ALMap.prototype.keys=function(){return Object.keys(this.map)},ALMap.prototype.values=function(){for(var e=[],t=this.keys(),n=0;n<t.length;n++)e.push(this.get(t[n]));return e},ALMap.prototype.size=function(){return Object.keys(this.map).length},ALMap.prototype.clear=function(){return this.map=[]};var RTCPeerConnection=null,getUserMedia=null,attachMediaStream=null,reattachMediaStream=null,webrtcDetectedBrowser=null;navigator.mozGetUserMedia?(console.log("This appears to be Firefox"),webrtcDetectedBrowser="firefox",RTCPeerConnection=mozRTCPeerConnection,RTCSessionDescription=mozRTCSessionDescription,RTCIceCandidate=mozRTCIceCandidate,getUserMedia=navigator.mozGetUserMedia.bind(navigator),attachMediaStream=function(e,t){console.log("Attaching media stream"),e.mozSrcObject=t,e.play()},reattachMediaStream=function(e,t){console.log("Reattaching media stream"),e.mozSrcObject=t.mozSrcObject,e.play()},MediaStream.prototype.getVideoTracks=function(){return[]},MediaStream.prototype.getAudioTracks=function(){return[]}):navigator.webkitGetUserMedia?(debug&&console.log("This appears to be Chrome"),webrtcDetectedBrowser="chrome",RTCPeerConnection=webkitRTCPeerConnection,getUserMedia=navigator.webkitGetUserMedia.bind(navigator),attachMediaStream=function(e,t){"undefined"!=typeof e.srcObject?e.srcObject=t:"undefined"!=typeof e.mozSrcObject?e.mozSrcObject=t:"undefined"!=typeof e.src?e.src=URL.createObjectURL(t):console.log("Error attaching stream to element.")},reattachMediaStream=function(e,t){e.src=t.src},webkitMediaStream.prototype.getVideoTracks||(webkitMediaStream.prototype.getVideoTracks=function(){return this.videoTracks},webkitMediaStream.prototype.getAudioTracks=function(){return this.audioTracks}),webkitRTCPeerConnection.prototype.getLocalStreams||(webkitRTCPeerConnection.prototype.getLocalStreams=function(){return this.localStreams},webkitRTCPeerConnection.prototype.getRemoteStreams=function(){return this.remoteStreams})):(RTCPeerConnection=null,console.log("Browser does not appear to be WebRTC-capable")),"undefined"!=typeof exports&&(exports.ALQueue=ALQueue),ALQueue.prototype.size=function(){return this.queue.length},ALQueue.prototype.push=function(e){this.queue.push(e)},ALQueue.prototype.pop=function(){var e=this.queue[0];return this.queue.slice(1),e},ALQueue.prototype.clear=function(){this.queue=[]},ConnectionManager.prototype.startSignallingConnection=function(){new ServerConnection(this.legion)},ConnectionManager.prototype.hasPeer=function(e){return this.peerConnections.contains(e)},ConnectionManager.prototype.connectPeer=function(e){this.peerConnections.set(e,new PeerConnection(e,this.legion)),this.peerConnections.get(e).startLocal()},ConnectionManager.prototype.connectPeerRemote=function(e){var t=e.sender,n=e.content,o=this.peerConnections.get(t);o?t<this.legion.id&&(this.peerConnections.get(t).cancelAll(),this.peerConnections["delete"](t),this.peerConnections.set(t,new PeerConnection(t,this.legion)),this.peerConnections.get(t).startRemote(n)):(this.peerConnections.set(t,new PeerConnection(t,this.legion)),this.peerConnections.get(t).startRemote(n))},ConnectionManager.prototype.handleSignalling=function(e){if(e.destination!=this.legion.id)this.legion.messagingAPI.broadcastMessage(e);else switch(e.type){case"OfferAsAnswer":return void this.connectPeerRemote(e);case"OfferReturn":return void this.peerConnections.get(e.sender).returnOffer(e.content);case"ICE":return void this.peerConnections.get(e.sender).return_ice(e.content)}},ConnectionManager.prototype.onCloseServer=function(e){console.log(this.legion.getTime()+" Overlay CLOSE "+this.legion.id+" to "+e.remoteID),this.serverConnection=null,this.legion.overlay.onServerDisconnect(e),this.legion.objectStore&&this.legion.objectStore.onServerDisconnection(e)},ConnectionManager.prototype.onOpenServer=function(e){console.log(this.legion.getTime()+" Overlay OPEN "+this.legion.id+" to "+e.remoteID),this.serverConnection=e,this.legion.overlay.onServerConnection(e),this.legion.objectStore&&this.legion.objectStore.onServerConnection(e)},ConnectionManager.prototype.onOpenClient=function(e){console.log(this.legion.getTime()+" Overlay OPEN "+this.legion.id+" to "+e.remoteID),this.legion.overlay.addPeer(e),this.legion.objectStore&&this.legion.objectStore.onClientConnection(e)},ConnectionManager.prototype.onCloseClient=function(e){console.log(this.legion.getTime()+" Overlay CLOSE "+this.legion.id+" to "+e.remoteID),this.peerConnections["delete"](e.remoteID),this.legion.overlay.removePeer(e),this.legion.objectStore&&this.legion.objectStore.onClientDisconnection(e)},ConnectionManager.prototype.sendStartOffer=function(e,t){var n=this;this.legion.generateMessage("OfferAsAnswer",e,function(e){e.destination=t.remoteID,n.legion.messagingAPI.broadcastMessage(e)})},ConnectionManager.prototype.sendReturnOffer=function(e,t){var n=this;this.legion.generateMessage("OfferReturn",e,function(e){e.destination=t.remoteID,n.legion.messagingAPI.broadcastMessage(e)})},ConnectionManager.prototype.sendICE=function(e,t){var n=this;this.legion.generateMessage("ICE",e,function(e){e.destination=t.remoteID,n.legion.messagingAPI.broadcastMessage(e)})},"undefined"!=typeof exports&&(exports.Duplicates=Duplicates),Duplicates.prototype.add=function(e,t){this.senders[e]||(this.senders[e]=new RangeSet),this.senders[e].add(t)},Duplicates.prototype.contains=function(e,t){return this.senders[e]?this.senders[e].contains(t):!1},Duplicates.prototype.print=function(){for(var e=Object.keys(this.senders),t=0;t<e.length;t++)console.log(e[t]),this.senders[e[t]].print()},RangeSet.prototype.add=function(e){for(var t=this.pairs.length-1;t>=0;t--){if(e>=this.pairs[t].first&&e<=this.pairs[t].last)return;if(e==this.pairs[t].last+1){for(this.pairs[t].last+=1;this.pairs[t-1]&&this.pairs[t].last==this.pairs[t-1].first-1;)this.pairs[t].last=this.pairs[t-1].last,this.pairs.splice(t-1,1),t--;return}if(e==this.pairs[t].first-1)return void(this.pairs[t].first-=1);if(e<this.pairs[t].first)return void this.pairs.splice(t+1,0,{first:e,last:e})}this.pairs.splice(0,0,{first:e,last:e})},RangeSet.prototype.contains=function(e){for(var t=0;t<this.pairs.length;t++)if(e>=this.pairs[t].first&&e<=this.pairs[t].last)return!0;return!1},RangeSet.prototype.print=function(){for(var e=0;e<this.pairs.length;e++)console.log(this.pairs[e].first+" : "+this.pairs[e].last)},Legion.prototype.join=function(){this.connectionManager.startSignallingConnection()},Legion.prototype.getMessageAPI=function(){return this.messagingAPI},Legion.prototype.getObjectStore=function(){return this.objectStore},Legion.prototype.generateMessage=function(e,t,n){var o={type:e,sender:this.id,ID:++this.messageCount};t?compress(JSON.stringify(t),function(e){o.content=e,n(o)},function(e){console.error("Compress failed!",e),n(null)}):n(o)},Legion.prototype.reGenerateMessage=function(e,t,n){t?compress(JSON.stringify(t),function(t){e.content=t,n(e)},function(e){console.error("Compress failed!",e),n(null)}):(e.content&&delete e.content,n(e))},Legion.prototype.getTime=function(){return Date.now()},"undefined"!=typeof exports&&(CRDT_Database=!0,exports.CRDT=CRDT);var crtd_type={type:"crdtType",propagation:1,crdt:{base_value:function(){},getValue:function(){},operations:{},merge:function(e,t){},compare:function(e,t){},fromJSONString:function(e){},toJSONString:function(e){}}};CRDT.STATE_BASED=1,CRDT.OP_BASED=2,CRDT.STATE=Object.freeze({COMPARE_RESPONSE:{EQUALS:1,LOWER:2,HIGHER:3,MUST_MERGE:4}}),CRDT.prototype.addOpToCurrentVersionVector=function(e,t){this.versionVector.set(e,t)},CRDT.prototype.getOpFromCurrentVersionVector=function(e){return this.versionVector.get(e)},CRDT.prototype.addOpToHistory=function(e,t,n){var o=this.opHistory.get(e);o||(o=new ALMap,this.opHistory.set(e,o)),o.set(t,{operationID:t,localRet:n})},CRDT.prototype.getOpFromHistory=function(e,t){var n=this.opHistory.get(e);if(n)return n.get(t)},CRDT.prototype.getState=function(){return this.state},CRDT.prototype.stateChanged=function(e){this.callback(e)},CRDT.prototype.setOnStateChange=function(e){this.callback=e},CRDT.prototype.getOperations=function(e){return console.warn("Not implemented: getOperations"),{}},CRDT.prototype.getVersionVector=function(){console.warn("Not implemented: getVersionVector")},CRDT.prototype.stateFromNetwork=function(e,t){console.warn("Not implemented: stateFromNetwork")},CRDT.prototype.operationsFromNetwork=function(e,t){console.warn("Not implemented: operationsFromNetwork")},MessagingAPI.prototype.onMessage=function(e,t,n){return t.sender==this.legion.id?void(debug&&console.info("return to creator fault from: "+e.remoteID)):void(this.duplicates.contains(t.sender,t.ID)||(this.duplicates.add(t.sender,t.ID),(!t.destination||t.destination&&t.destination==this.legion.id)&&this.deliver(t),debug&&console.log(t.type+" from "+e.remoteID+" by "+t.sender+" to "+t.destination),detailedDebug&&console.log(t),this.messagingProtocol.onMessage(e,t,n)))},MessagingAPI.prototype.deliver=function(e){this.callbacks.contains(e.type)?this.callbacks.get(e.type)(e):console.warn("can't deliver: no handler defined",JSON.stringify(e))},MessagingAPI.prototype.broadcastMessage=function(e){this.messagingProtocol.broadcastMessage(e)},MessagingAPI.prototype.broadcast=function(e,t){var n=this;this.legion.generateMessage(e,t,function(e){n.broadcastMessage(e)})},MessagingAPI.prototype.setHandlerFor=function(e,t){this.callbacks.set(e,t)},PeerSync.prototype.finalize=function(){this.isSynced=!1,this.peerConnection=null,this.queueAfterSync.clear(),this.queueAfterSync=null,this.sharedObjects.clear(),this.sharedObjects=null,clearTimeout(this.psTimeout)},PeerSync.prototype.clearQueue=function(){for(var e=this.queueAfterSync.pop();"undefined"!=typeof e;)this.peerConnection.send(e),e=this.queueAfterSync.pop()},PeerSync.prototype.handleSyncAnswer=function(e){for(var t=e.content.states,n=e.content.missing_ops,o=0;o<t.length;o++){var i=this.objectStore.crdts.get(t[o].id);i?i.stateFromNetwork(i.fromJSONString(t[o].state),this.peerConnection):console.warn("I should not be here.")}for(var o=0;o<n.length;o++){var i=this.objectStore.crdts.get(n[o].id);i?i.operationsFromNetwork(n[o].operations,this.peerConnection):console.warn("I should not be here.")}this.isSynced=!0},PeerSync.prototype.handleSync=function(e){for(var t=e.content.stateObjects,n=e.content.operationObjects,o={missing_ops:[],states:[]},i=0;i<n.length;i++){var r=this.objectStore.crdts.get(n[i].id);if(r){var s=r.getVersionVector(),a=this.objectStore.versionVectorDiff(r,s);a.vv2.missing.length>0&&o.missing_ops.push({id:r.id,operations:r.getOperations(a.vv2.missing)})}}for(var i=0;i<t.length;i++){var r=this.objectStore.crdts.get(t[i].id);r&&o.states.push({id:r.id,state:r.toJSONString(r.getState())})}var c=this;this.legion.generateMessage(this.objectStore.handlers.peerSyncAnswer.type,o,function(e){e.destination=c.peerConnection.remoteID,c.peerConnection.send(e),c.clearQueue()})},PeerSync.prototype.sync=function(){for(var e=this,t={stateObjects:[],operationObjects:[]},n=this.objectStore.crdts.keys(),o=0;o<n.length;o++){var i=this.objectStore.crdts.get(n[o]);i.crdt.propagation==CRDT.STATE_BASED?t.stateObjects.push({id:i.id}):i.crdt.propagation==CRDT.OP_BASED?t.operationObjects.push({id:i.id,vv:i.getVersionVector()}):console.error("Shit happened.")}this.legion.generateMessage(this.objectStore.handlers.peerSync.type,t,function(t){t.destination=e.peerConnection.remoteID,e.legion.messagingAPI.broadcastMessage(t)})};var CRDT_LIB={};ObjectStore.prototype.defineCRDT=function(e){this.types.contains(e.type)?console.error("Can't redefine existing CRDT.",e):this.types.set(e.type,e)},ObjectStore.prototype.get=function(e,t){if(this.types.contains(t)){if(this.crdts.contains(e))return this.crdts.get(e);var n=this.types.get(t),o=new CRDT(e,n,this);return this.crdts.set(e,o),o}console.error("No typedef found for CRDT.",t)},ObjectStore.prototype.propagate=function(e,t,n,o){console.warn("Not implemented: propagate")},ObjectStore.prototype.onServerDisconnection=function(e){console.warn("Not Implemented.")},ObjectStore.prototype.onServerConnection=function(e){console.warn("Not Implemented: ObjectStore.onServerConnection")},ObjectStore.prototype.onClientConnection=function(e){var t=new PeerSync(this.legion,this,e);this.peerSyncs.set(t.remoteID,t),t.sync()},ObjectStore.prototype.onClientDisconnection=function(e){var t=this.peerSyncs.get(t.remoteID);this.peerSyncs["delete"](t.remoteID),t.finalize()},ObjectStore.prototype.versionVectorDiff=function(e,t){return console.error("Not Implemented."),{vv1:{missing:[]},vv2:{missing:[]}}},Overlay.prototype.peerCount=function(){return this.peers.size()},Overlay.prototype.addPeer=function(e){this.peers.set(e.remoteID,e),this.overlayProtocol.onClientConnection(e)},Overlay.prototype.removePeer=function(e){this.peers["delete"](e.remoteID),this.overlayProtocol.onClientDisconnect(e)},Overlay.prototype.onServerDisconnect=function(e){this.overlayProtocol.onServerDisconnect(e)},Overlay.prototype.onServerConnection=function(e){this.overlayProtocol.onServerConnection(e)},Overlay.prototype.getPeers=function(e){e||(e=this.peerCount());var t=this.peers.values();return t.slice(0,e)},PeerConnection.prototype.setChannelHandlers=function(){var e=this;this.channel.onmessage=function(t){var n=JSON.parse(t.data),o=JSON.parse(t.data);n.content?decompress(n.content,function(t){n.content=JSON.parse(t),e.legion.messagingAPI.onMessage(e,n,o)}):e.legion.messagingAPI.onMessage(e,n,o)},this.channel.onopen=function(t){e.legion.connectionManager.onOpenClient(e)},this.channel.onclose=function(t){e.legion.connectionManager.onCloseClient(e)}},PeerConnection.prototype.cancelAll=function(){this.channel.onclose=function(){console.log("Forced a channel close for duplicate PeerConnection.")},this.channel=null,this.legion=null,this.remoteID=null,this.peer.close(),this.peer=null},PeerConnection.prototype.returnOffer=function(e){detailedDebug&&console.log(e),this.peer.setRemoteDescription(new RTCSessionDescription(e))},PeerConnection.prototype.return_ice=function(e){detailedDebug&&console.log(e),this.peer.addIceCandidate(new RTCIceCandidate(e),function(){},function(e){console.error("onAddIceCandidateError",e)})},PeerConnection.prototype.onicecandidate=function(e){e.candidate&&this.legion.connectionManager.sendICE(e.candidate,this)},PeerConnection.prototype.startLocal=function(){debug&&console.log("start local: "+this.remoteID);var e=this;this.channel=this.peer.createDataChannel("sendDataChannel",dataConstraint),this.setChannelHandlers(),this.peer.onicecandidate=function(t){e.onicecandidate(t)},this.peer.createOffer(function(t){e.peer.setLocalDescription(t),e.legion.connectionManager.sendStartOffer(t,e)},function(t){console.error("onCreateSessionDescriptionError",t),e.onclose()})},PeerConnection.prototype.startRemote=function(e){detailedDebug&&console.log(e),debug&&console.log("start remote: "+this.remoteID),this.peer.setRemoteDescription(new RTCSessionDescription(e));var t=this;this.peer.ondatachannel=function(e){t.channel=e.channel,t.setChannelHandlers()},this.peer.onicecandidate=function(e){t.onicecandidate(e)},this.peer.createAnswer(function(e){t.peer.setLocalDescription(e),t.legion.connectionManager.sendReturnOffer(e,t)},function(e){console.error("onCreateSessionDescriptionError",e),t.onclose()})},PeerConnection.prototype.send=function(e){"object"==typeof e&&(e=JSON.stringify(e)),this.channel&&"open"==this.channel.readyState?this.channel.send(e):console.warn("Peer has no open channel.")};var servers={iceServers:[{url:"stun:stun.l.google.com:19302"}]},pcConstraint={optional:[{RtpDataChannels:!1}]},dataConstraint=null;ServerConnection.prototype.send=function(e){"object"==typeof e&&(e=JSON.stringify(e)),this.socket.readyState==WebSocket.OPEN&&this.socket.send(e)},"undefined"==typeof generateUniqueIdentifier&&(generateUniqueIdentifier=function(){return(""+Math.random()).substr(2)}),"undefined"!=typeof exports&&(CRDT=require("./../crdt.js"),CRDT=CRDT.CRDT,ALMap=require("./../ALMap.js"),ALMap=ALMap.ALMap);var op_orset={type:"OP_ORSet",propagation:CRDT.OP_BASED,crdt:{base_value:{state:{adds:ALMap,removes:ALMap}},getValue:function(){return this.state.adds.keys()},operations:{add:{local:function(e){var t=generateUniqueIdentifier();return{element:e,unique:t}},remote:function(e){if(!this.state.removes.contains(e.unique)){this.state.adds.contains(e.element)||this.state.adds.set(e.element,new ALMap);var t=this.state.adds.get(e.element);if(!t.contains(e.unique))return t.set(e.unique,!0),{add:e.element}}}},remove:{local:function(e){var t=this.state.adds.get(e);if(!t)return{element:e,removes:[]};var n=t.keys();return{element:e,removes:n}},remote:function(e){if(0==e.removes.length)return{};for(var t=this.state.adds.get(e.element),n=0;n<e.removes.length;n++)this.state.removes.set(e.removes[n],!0),t["delete"](e.removes[n]);return 0==t.size()?(this.state.adds["delete"](e.element),{remove:e.element}):void 0}}}}};"undefined"!=typeof exports?exports.OP_ORSet=op_orset:CRDT_LIB.OP_ORSet=op_orset,FloodMessaging.prototype.onMessage=function(e,t,n){(!t.destination||t.destination&&t.destination!=this.legion.id)&&this.messagingAPI.messagingProtocol.broadcastMessage(n)},FloodMessaging.prototype.broadcastMessage=function(e){var t=this.legion.overlay.getPeers(this.legion.overlay.peerCount());if(e.destination)for(var n=0;n<t.length;n++)if(t[n].remoteID==e.destination)return void t[n].send(e);for(var n=0;n<t.length;n++)t[n].send(e);var o=this.legion.connectionManager.serverConnection;o&&o.send(e)},"undefined"!=typeof exports&&(CRDT=require("./../crdt.js"),CRDT=CRDT.CRDT);var state_counter={type:"STATE_Counter",propagation:CRDT.STATE_BASED,crdt:{base_value:{state:{dec:[],inc:[]}},getValue:function(){for(var e=0,t=Object.keys(this.state.dec),n=Object.keys(this.state.inc),o=0;o<t.length;o++)e-=this.state.dec[t[o]];for(var i=0;i<n.length;i++)e+=this.state.inc[n[i]];return e},operations:{increment:function(e,t){this.state.inc[e]||(this.state.inc[e]=0),this.state.inc[e]+=t,this.stateChanged(t)},decrement:function(e,t){this.state.dec[e]||(this.state.dec[e]=0),this.state.dec[e]+=t,this.stateChanged(-t)}},merge:function(e,t){for(var n=Object.keys(t.dec),o=Object.keys(t.inc),i=0;i<n.length;i++){var r=e.dec[n[i]];r?e.dec[n[i]]=Math.max(e.dec[n[i]],t.dec[n[i]]):e.dec[n[i]]=t.dec[n[i]]}for(var i=0;i<o.length;i++){var r=e.inc[o[i]];r?e.inc[o[i]]=Math.max(e.inc[o[i]],t.inc[o[i]]):e.inc[o[i]]=t.inc[o[i]]}return e},compare:function(e,t){return void console.error("Not Implemented.")},fromJSONString:function(e){for(var t={dec:[],inc:[]},n=e.dec,o=e.inc,i=0;i<n.length;i++)t.dec[n[i][0]]=n[i][1];for(var i=0;i<o.length;i++)t.inc[o[i][0]]=o[i][1];return t},toJSONString:function(e){for(var t=Object.keys(e.dec),n=Object.keys(e.inc),o=[],i=[],r=0;r<t.length;r++)o.push([t[r],e.dec[t[r]]]);for(var r=0;r<n.length;r++)i.push([n[r],e.inc[n[r]]]);return{dec:o,inc:i}}}};"undefined"!=typeof exports?exports.STATE_Counter=state_counter:CRDT_LIB.STATE_Counter=state_counter,SimpleOverlay.prototype.onClientConnection=function(e){},SimpleOverlay.prototype.onClientDisconnect=function(e){},SimpleOverlay.prototype.onServerConnection=function(e){this.init(e)},SimpleOverlay.prototype.onServerDisconnect=function(e){},SimpleOverlay.prototype.init=function(e){this.legion.generateMessage("ConnectToAnyNodesPlease",null,function(t){e.send(t)})},SimpleOverlay.prototype.floodJoin=function(){var e=this.overlay.getPeers(this.overlay.peerCount()),t=this.legion.connectionManager.serverConnection;t||this.legion.connectionManager.startSignallingConnection(),this.legion.generateMessage("ConnectToAnyNodesPlease",null,function(n){t&&t.send(n);for(var o=0;o<e.length;o++)e[o].send(n)})},SimpleOverlay.prototype.handleJoin=function(e){this.legion.connectionManager.hasPeer(e.sender)||this.legion.connectionManager.connectPeer(e.sender)};
